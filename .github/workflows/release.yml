name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          pip list  # Проверяем установленные пакеты

      - name: Update version in version.txt
        id: update_version
        run: |
          VERSION="1.0.$(date +%s)"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          sed -i "s/{{VERSION}}/$VERSION/g" version.txt
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "Update version to $VERSION"
          git push

      - name: Build executable with PyInstaller
        run: |
          pyinstaller Blind_log.spec
          if (!(Test-Path -Path dist\Blind_log.exe)) { throw "Build failed: Blind_log.exe not found" }

      - name: Archive build artifact
        run: |
          Compress-Archive -Path dist\Blind_log.exe -DestinationPath dist\Blind_log.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Blind Log v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist\Blind_log.zip
          asset_name: Blind_log.zip
          asset_content_type: application/zip
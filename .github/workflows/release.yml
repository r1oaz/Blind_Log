name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          pip list  # Проверяем установленные пакеты

      - name: Get latest GitHub release version
        run: |
          $response = curl -s https://api.github.com/repos/r1oaz/Blind_Log/releases/latest
          $VERSION = ($response | ConvertFrom-Json).tag_name
          echo "Retrieved version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Update version in version.txt
        run: |
          $version = "${{ env.version }}"
          # Ensure version is in the correct format
          if ($version -match '^\d+\.\d+\.\d+$') {
            (Get-Content version.txt) | ForEach-Object {
              if ($_ -match "filevers=\(.*\)") {
                "filevers=($version, $version, $version, 0)"
              } elseif ($_ -match "prodvers=\(.*\)") {
                "prodvers=($version, $version, $version, 0)"
              } elseif ($_ -match "StringStruct\('FileVersion'.*") {
                "StringStruct('FileVersion', u'$version')"
              } else {
                $_
              }
            } | Set-Content version.txt
            Write-Host "Обновлена версия: $version"
          } else {
            Write-Host "Invalid version format: $version"
            exit 1
          }

      - name: Build executable with PyInstaller
        run: |
          pyinstaller Blind_log.spec

      - name: Archive build artifact
        run: Compress-Archive -Path dist\Blind_log.exe -DestinationPath dist\Blind_log.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.version }}  # Автоматический номер версии
          release_name: Blind Log v${{ env.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist\Blind_log.zip
          asset_name: Blind_log.zip
          asset_content_type: application/zip

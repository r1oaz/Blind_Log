name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–µ–≥–∏ –∏ –∫–æ–º–º–∏—Ç—ã

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: üì¶ Create venv and install dependencies
        run: |
          python -m venv venv
          venv\Scripts\python.exe -m pip install --upgrade pip
          venv\Scripts\python.exe -m pip install -r requirements.txt
          venv\Scripts\python.exe -m pip install pyinstaller
        shell: pwsh

      - name: üîç Extract version from version.txt
        id: get_version
        run: |
          $content = Get-Content version.txt | Where-Object { $_ -match "FileVersion" }
          if ($content -match "'([0-9]+\.[0-9]+\.[0-9]+)") {
            echo "version=$($matches[1])" >> $env:GITHUB_OUTPUT
          } else {
            Write-Error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤–µ—Ä—Å–∏—é"
            exit 1
          }
        shell: pwsh

      - name: üìú Extract changelog from changeLog.txt
        id: changelog_file
        run: |
          $lines = Get-Content changeLog.txt -Encoding utf8
          $desc = ""
          foreach ($line in $lines) {
            if ($line -match '^---+$') { break }
            $desc += "$line`n"
          }
          $desc = $desc.TrimEnd("`n")
          $eof = [System.Guid]::NewGuid().ToString()
          echo "changelog<<$eof" >> $env:GITHUB_OUTPUT
          echo "$desc" >> $env:GITHUB_OUTPUT
          echo "$eof" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Ô∏è Build Blind_log.exe with PyInstaller
        run: |
          try {
            venv\Scripts\pyinstaller.exe Blind_log.spec
            if (!(Test-Path -Path "dist\\Blind_log.exe")) {
              Write-Error "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: dist\\Blind_log.exe"
              exit 1
            }
          } catch {
            Write-Error "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Blind_log.exe: $_"
            exit 1
          }
        shell: pwsh

      - name: üì¶ Archive build artifacts
        run: |
          try {
            Compress-Archive -Path dist\Blind_log.exe -DestinationPath dist\Blind_log.zip -Force
            if (!(Test-Path dist\Blind_log.zip)) {
              Write-Error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤"
              exit 1
            }
          } catch {
            Write-Error "‚ùå –û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: $_"
            exit 1
          }
        shell: pwsh

      - name: üöÄ Create GitHub Release with changelog
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Blind Log v${{ steps.get_version.outputs.version }}
          body: ${{ steps.changelog_file.outputs.changelog }}
          draft: false
          prerelease: false

      - name: ‚¨ÜÔ∏è Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist\Blind_log.zip
          asset_name: Blind_log.zip
          asset_content_type: application/zip

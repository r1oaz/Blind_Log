name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: üì¶ Create venv and install dependencies
        run: |
          python -m venv venv
          venv\Scripts\python.exe -m pip install --upgrade pip
          venv\Scripts\python.exe -m pip install -r requirements.txt
          venv\Scripts\python.exe -m pip install pyinstaller
        shell: pwsh

      - name: üïí Update version.txt
        run: |
          try {
            venv\Scripts\python.exe update_version.py
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add version.txt
            git diff --cached --quiet || git commit -m "Update version in version.txt"
            git push
          } catch {
            Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤–µ—Ä—Å–∏–∏: $_"
            exit 1
          }
        shell: pwsh

      - name: üõ†Ô∏è Build executable with PyInstaller
        run: |
          try {
            venv\Scripts\pyinstaller.exe Blind_log.spec
            if (!(Test-Path -Path "dist\\Blind_log\\Blind_log.exe")) {
              Write-Error "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: dist\\Blind_log\\Blind_log.exe"
              exit 1
            }
          } catch {
            Write-Error "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: $_"
            exit 1
          }
        shell: pwsh

      - name: üì¶ Archive build artifact
        run: |
          try {
            Compress-Archive -Path dist\Blind_log\Blind_log.exe -DestinationPath dist\Blind_log.zip -Force
            if (!(Test-Path dist\Blind_log.zip)) {
              Write-Error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤"
              exit 1
            }
          } catch {
            Write-Error "‚ùå –û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: $_"
            exit 1
          }
        shell: pwsh

      - name: üöÄ Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Blind Log v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: ‚¨ÜÔ∏è Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist\Blind_log.zip
          asset_name: Blind_log.zip
          asset_content_type: application/zip
